(()=>{"use strict";class t{errorsCount=0;isError(){return this.errorsCount>0}getErrorsCount(){return this.errorsCount}reset(){this.errorsCount=0}addError(){this.errorsCount++}setErrors(t){this.errorsCount=t}}class e{constructor(t){this.game=t}noErrorWordsCount(){return this.game.getCards().filter((t=>!t.stat.isError())).length}errorsCount(){return this.game.getCards().reduce(((t,e)=>t+e.stat.getErrorsCount()),0)}worstWord(){const t=this.game.getCards().sort(((t,e)=>e.stat.getErrorsCount()-t.stat.getErrorsCount()))[0];return t?t.word.getWord():""}}class r{constructor(t,e){this.letter=t,this.type=e}}class s{answerLetters=[];shuffleLetters=[];constructor(t){this.stat=t.stat,this.word=t.word,this.shuffleLetters=this.word.getShuffled().split("").map((t=>new r(t,"default")))}inputLetter(t){const e=this.answerLetters.map((t=>t.letter)).join("")+t;if(this.isMatch(e)){const e=this.shuffleLetters.findIndex((e=>e.letter===t));if(-1!==e)return this.shuffleLetters.splice(e,1),this.answerLetters.push(new r(t,"success")),!0}return this.stat.addError(),!1}getNextLetter(){const t=this.word.getWord();return t?.[this.answerLetters.length]||""}showRightAnswer(){this.answerLetters=this.word.getWord().split("").map((t=>new r(t,"error"))),this.shuffleLetters=[]}isCompleted(){return this.word.getWord()===this.answerLetters.map((t=>t.letter)).join("")}isFail(){return this.stat.getErrorsCount()>=3}isMatch(t){return this.word.getWord().startsWith(t)}}class o{cards=[];activeCard=0;stat=null;pause=!1;constructor(t){this.onUpdate=t.onUpdate||(()=>{}),this.startGame(t.words)}startGame(t){this.createCards(t),this.activeCard=0,this.stat=new e(this)}createCards(e){this.cards=e.map((e=>new s({word:e,stat:new t})))}inputLetter(t){if(this.pause)return;const e=this.getActiveCard();e&&(e.inputLetter(t),e.isCompleted()&&this.nextCard(),this.isCompleted()&&(this.pause=!0),this.checkWordFail(),this.onUpdate())}checkWordFail(){const t=this.getActiveCard();t&&t.stat.getErrorsCount()>=3&&(t.showRightAnswer(),this.pause=!0,setTimeout((()=>{this.pause=!1,this.nextCard(),this.onUpdate()}),2e3))}isCompleted(){return this.cards.every((t=>t.isCompleted()))}nextCard(){this.pause||(this.activeCard<this.cards.length-1&&this.activeCard++,this.onUpdate())}prevCard(){this.pause||(this.activeCard>0&&this.activeCard--,this.onUpdate())}getCards(){return this.cards}getTotal(){return this.cards.length}getCurrent(){return this.activeCard+1}getActiveCard(){return this.cards[this.activeCard]}}class n{constructor(t){this.props=t}getColorClass(){switch(this.props.type){case"error":return"bg-red";case"success":return"bg-green";default:return"bg-blue"}}template(){const t=document.createElement("button");return t.className=`text-white font-bold py-2 px-4 mx-3 rounded ${this.getColorClass()}-500 hover:${this.getColorClass()}-600`,t.type="button",t.dataset.letter=this.props.letter,t.textContent=this.props.letter,this.props.onClick&&t.addEventListener("click",this.props.onClick),t}}class i{constructor(t){this.word=t}getShuffled(){const t=this.word.split("");for(let e=t.length-1;e>0;e--){const r=Math.floor(Math.random()*(e+1));[t[e],t[r]]=[t[r],t[e]]}return t.join("")}getWord(){return this.word}}const a=JSON.parse('["apple","function","timeout","task","application","data","tragedy","sun","symbol","button","software"]');new class{constructor(){this.startGame(),document.addEventListener("keypress",this.keyboardHandler.bind(this))}startGame(){const t={words:this.getRandomWords(6),onUpdate:this.renderGame.bind(this)};this.game=new o(t),this.renderGame()}getRandomWords(t){return a.slice().sort((()=>Math.random()-.5)).slice(0,t).map((t=>new i(t||"")))}renderGame(){this.renderHeader(),this.renderAnswer(),this.renderShuffle(),this.game.isCompleted()&&this.renderStatistic()}renderHeader(){document.querySelector("#current_question").textContent=String(this.game.getCurrent()),document.querySelector("#total_questions").textContent=String(this.game.getTotal())}renderAnswer(){const t=document.querySelector("#answer");t.innerHTML="";const e=this.game.getActiveCard();e?.answerLetters.forEach((e=>{const r=new n({letter:e.letter,type:e.type}).template();r&&t.appendChild(r)}))}renderShuffle(){const t=document.querySelector("#letters");t.innerHTML="";const e=this.game.getActiveCard();e?.shuffleLetters.forEach((e=>{const r=new n({letter:e.letter,type:e.type,onClick:()=>this.onLetterClick(e)}).template();r&&t.appendChild(r)}))}onLetterClick(t){this.input(t.letter);const e=this.game.getActiveCard();e?.getNextLetter()!==t.letter&&(t.type="error",this.renderGame())}input(t){this.game.inputLetter(t)}renderStatistic(){document.querySelector("#quiz").style.display="none";const t=document.querySelector("#stat");t.style.display="flex",t.innerHTML=`\n      <p>Words with no errors: ${this.game.stat.noErrorWordsCount()}</p>\n      <p>Errors count: ${this.game.stat.errorsCount()}</p>\n      <p>Word with most errors: ${this.game.stat.worstWord()}</p>\n    `}keyboardHandler(t){const e=t.key;this.game.inputLetter(e)}}})();